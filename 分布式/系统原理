基本概念
1 异常
   1.1 机器宕机
   1.2 网络异常
       消息丢失，两个节点之间无法通信，出现“网络分化”
       消息乱序，不是按照发送顺序依次打到目的节点（考虑使用序列号机制处理网络消息的乱序问题）
       数据错误，分布式系统协议不能认为所有基于TCP协议则通信就是可靠的。
   1.3 存储数据丢失：对于有状态节点来说，数据丢失意味状态丢失，通常只能从其他节点读取、恢复存储状态。
   1.4 异常处理原则：尽量在系统设计时考虑到可能出现的任何异常情况。
2 副本
  副本通常指在分布式系统中为数据或者服务提供的冗余，副本是解决分布式数据丢失的唯一手段
  副本一致性：
     强一致性：任何时候用户或者节点读到的都是最近一次成功的副本数据
     单调一致性：任何时候，任何用户一旦读到某个数据再某次更新后的值，这个用户不会再读到比这个值更旧的值。
     会话一致性：任何用户在某一次会话内一旦读到某个数据在某次更新后的值，这个用户在这次会话不再读到比这个值更旧的值。
     最终一致性：
     弱一致性:
     
3 原理
  3.1 数据分布方式
     分布式就是利用多台机器协同解决单台机器不能解决的计算，存储问题。
     单机问题使用分布式解决，首先解决如何将问题拆解为多机分布式处理解决，使得每个分布式的子机器处理一个子问题（存储或者计算），因此问题的输入对象是
     数据，如何拆解输入数据：
     3.1.1 哈希方式
       问题：1 扩展性不高，当集群规模扩展，则几乎所有数据都要重新迁移
             2 数据倾斜，不均 
     3.1.2 数据范围
       将数据按特征值的值域范围划分不同的区间，使得每台服务器处理不同区间的数据
       一般需要专门的服务器在内存中维护数据分布信息，（称为数据的分布元信息）
     3.1.3 按数据量分布
     3.1.4 一致性hash  
   3.2 副本的分布
     分布式系统容错、提高可用性的基本手段就是使用副本，而副本的分布方式影响系统的可扩展性。
     3.2.1 以机器为单位，若干机器为副本，副本机器之间的数据完全相同。
         非常简单，但是恢复数据效率不高，可扩展性也不高
     3.2.2 将数据拆分合理的数据段，以数据段为副本
         通常使得每个数据段的大小相等且控制在一定大小内，数据段的选择与数据分布直接相关；
         对于hash分布的方式，每个hash分桶后的余数最为一个数据段，为了控制数据段大小，通常使得分桶个数大于集群规模，这样每台机器负责一定数据段的副本。
         机器a{p1,p2,p3}
         机器b{p1,p2}
         机器c{p2,p3}
         机器d{p1,p3}
         当副本分布于机器无关时，数据丢失恢复效率变很高，因为一旦某台机器数据丢失，其上的数据段副本分布在整个集群的所有机器中，而不是仅仅在某几个机
         器中，从而可以从整个集群同时拷贝恢复数据。
         当副本分布与机器无关时，也利于容错，出现机器宕机，由于宕机的副本分布于整个集群，压力自然分散到整个集群。
         另外利于集群扩展，理论上，当前集群规模是N台机器，加入一台新机器，只需从各个机器迁移1/N-1/N+1比例的数据段到新机器即可
         工程上，完全按照数据段建立副本会引起需要管理的元数据的开销很高，副本维护的难度增大，一种折中做法就是将某些数据段再组成一个数据段分组，按照
         分组粒度进行副本管理。
  3.3 本地化计算
      数据的分布方式影响计算的分布方式，计算节点和保存计算结果的存储节点可以在同一台机器上，也可以位于不同物理机器。
      如果位于不同物理机，需要网络传输，开销大，所以尽量在一台物理机器上进行，称为本地化计算。（移动数据不如移动计算）
  3.4 副本协议
     控制副本读写行为的规则，使得副本满足可用性和一致性。
     3.4.1 中心化的副本控制协议：
       由一个中心节点协调副本数据的更新，维护副本数据的一致性。
       primary-secondary协议，
     3.4.2 去中心化的副本控制协议：
       各个节点都是平等的，通过协商方式来达到某些操作。
         
     
