nginx
Nginx是一款自由的，开源的，高性能的HTTP服务器和反向代理服务器
 Nginx使用基于事件驱动架构，使得其可以支持数以百万级别的TCP连接
 高度的模块化和自由软件许可证使得第三方模块层次不穷
 跨平台服务器，可以运行在很多操作系统上

反向代理
客服端1------------》                       =======>后端服务器
客户端2------------》  反向代理服务器nginx   =======>后端服务器
客户端3------------》                       =======>后端服务器

反向代理：1 保护和隐藏原始资源服务器
         2 加密和ssl加速
         3 通过缓存静态资源，加速web访问
         4 实现负载均衡

此时，请求的来源也就是客户端是明确的，但是具体请求到那台服务器并不明确，nginx就扮演了反向代理角色
客户端无感知代理存在，反向代理对外是透明的，
反向代理，它代理的是服务端，主要应用于服务器集群分布式部署的情况下，
可以保证内网的安全，通常将反向代理作为公网访问地址，WEB服务器是内网
负载均衡，优化网站的负载


负载均衡算法：
1 weight轮询：按照顺序逐一分配到后端服务器，可以给不同的后端服务器设置一个weight，用于调整不同服务器上请求的分配率
2 ip_hash：按照发送请求的客户端ip的hash结果进行匹配，这样的算法下一个固定ip地址的客户端总会访问到同一个后端服务器，
3 url_hash: 按照请求的URL的hash结果分配请求

nginx是由内核和一系列模块组成
比如http模块，event模块，mail模块
nginx作为web服务器（1应用层使用http协议，2支持静态页面html静态文档，3统一资源定位符）

nginx可以作为静态文档的web服务器，还可以支持CGI协议的动态语言，比如PHP，Perl,但是不支持java，java一般跟tomcat配合完成

tomcat ：是一个application server,更准确来讲是一个Servlet容器。相对于http服务器，Tomcat能够动态的生成资源并返回到客户端
       应用服务器是一个应用执行的容器，支持开发语言的运行，保证应用能够在应用服务器上正常运行。
nginx本身不支持生成动态页面，但是他们可以通过其他模块支持，通常关注http协议层面的传输和访问控制，所以有代理，负载均衡等功能


