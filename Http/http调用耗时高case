1 问题
  通过Apache HttpClient调用后端的HTTP服务，平均耗时很高
2 排查问题，
 2.1 查看外围系统指标
    看一些调用方和被调用方机器的负载，CPU（通过top命令），确认正常
 2.2 进程指标
    java程序主要看GC，线程堆栈情况（调用方和被调用方都要看）
    young gc都非常少，耗时也不高，没有长时间的STW
    线程堆栈也没啥问题
 2.3 本地复现
    本地如果能复现，就可以看看具体原因
3 诊断-定位
  从上述排查问题过程中，大致确定不是程序上的问题，看看TCP层面的
    有网络编程经验的人一定知道 TCP_NODELAY参数可能会引起耗时高的问题。
    后来验证，调用方和被调用方此参数都设置true，发现耗时下去，
4 Socket编程中，TCP_NODELAY是控制是否开启Nagle算法的，true表示关闭nagle算法，
5 Nagle算法：通过减少通过网络发送数据包的数据量来提高TCP/IP网络效率的方法，
  如果应用程序每次产生1个字节的数据，然后这1个字节数据又以网络数据包的形式发送到远端服务器，那么很容易导致网络因为太多的数据包而过载，这种典型情况下，
  传送1字节有效数据包，却要花费40个字节长包头的额外开销，利用率极低。因此有了Nagle算法
  如果发送内容>=1个MSS,立即发送（MSS,TCP数据包每次能够传输的最大数据分段）
  如果之前没有包未被ACK,立即发送
  如果之前有报未被ACK,缓存发送内容
  如果收到ACK,立即发送缓存内存。
6 Delayed ACK
 TCP协议为了保证传输的可靠性，收到都要ack，只是单纯发送ack，代价很高
 TCP Delayed ACK 就是为了改善网络性能来解决问题，将几个ACK响应组合在一起成为单个响应，或者将ACK响应与响应数据一起发送给对方，减少协议开销
 如果接受方没有响应数据，ACK延迟发送，默认延迟是40ms。
 
7 现在A和B进行数据传输：A运行Nagle算法，B运行Delayed ACK算法
 A向B发送数据，B由于Delayed ACK不会立即响应，而A使用Nagle算法，一直等待B的ACK，ACK不来一直不发第二个数据包，如果两个数据包对应一个请求，这个请求就耽误。
 
8 TCP_NODELAY 解决问题
 关闭了nagle算法，即时上一个ack没有到达，也会发送下一个数据包，所以一般网络编程中，建议开启TCPNODELAY来提高响应速度。
 
