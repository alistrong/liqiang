1 长连接连接管理
  question1:如何管理这么多连接，当数据需要下发时，如何根据用户id查找连接信息，或者根据连接信息查找用户，所以需要选择一个合适的数据结构存储连接信息
  初步考虑过使用hash,存取快速，需要自己实现hash算法，经常分配释放内存会导致碎片，
  如果考虑使用数组，需要一开始分配大块内存，不支持动态扩展，存取方便，没有碎片
  如果考虑动态数据，动态扩展，
  58IM采用数组存储session信息，
  1 预分配100w全量的大小的数组，一共418M，大小可接受，并且有容量监控，防止空间满了建连接失败
  2 直接使用session的fd作为下标，实现存取O（1）
  3 由于fd的分配策略时从小到大的，空间利用率还可以。
  question2:TCP 长连接心跳超时,某种情况下，客户端异常连接关闭，但是服务端不知道，这些无用的连接，服务端是需要清理的，避免占用大量资源，
  是通过心跳机制保持连接，如果心跳超时则剔除连接，
  
2 长连接负载均衡策略
  长连接接入层有多个节点，常见的是rr,但是如果新部署了两个节点，并不能马上分摊已有节点的负载，目前比较理想的是根据连接数，如何做呢？
  需要一个注册发现组件etcd,
  首先接入层启动后，往etcd注册信息，并且后续的过程中，需要定期更新当前已有的连接数到etcd,
  然后路由层route server，去etcd取信息，实时计算，做排序。返回接入层节点
  
  
3 长连接接入层如何实现优雅重启和缩容？不影响用户
  1 接入层足够轻量，尽量只负责TCP连接和数据转发，其他业务处理转到业务处理层，
  
4 TCP层如何防止攻击
  syn攻击：客户端在短时间伪造大量不存在的ip地址，然后向服务端发送TCP握手请求sync报文，服务端收到后回ack，等待客户端的ack报文，但是由于客户端是假的，
  因此服务端不断重发ack，直到超时才会断开连接，这些伪造的sync包长期占用未连接队列，从而引起网络阻塞和瘫痪。
  通过 netstat -n -p TCP | grep SYN_RECV ，看看处于这样的连接状态是不是很多，如果很多则有可能存在攻击
  linux层面有些参数应对上述问题：1 tcp_synack_retries 减少重试次数 2 tcp_max_syn_backlog 增加sync连接数 3 tcp_abort_on_overflow 过多直接抛弃
  
  增加IP统计服务，增加IP黑名单
  TLS加密传输
  
