wtable 58自研非关系存储，
底层使用的是RocksDB(facebook开源的)，存储引擎采用LSM树 （Log-Structured Merge Tree），
LSM 通过批量存储化技术规避磁盘随机写入问题，思想也很简单，把一颗大树拆分成多颗小树，首先写入到内存中（内存没有寻道问题）在内存中构建有序小树，随着小树
越来越大，内存中的小树会flush到磁盘中，磁盘中的树定期做merge操作，合并成大树
将数据的增量修改保存在内存中，达到一定大小后，进行排序后，将这些修改写入到磁盘中，如果这个期间有系统断电或者异常，则可能导致数据丢失，需要将数据先写入到log文件中
这样将随机写转化为追加写入，对性能有很大，如果进程中间发生问题，重启可以根据log恢复之前的数据。

LSMtree存储引擎在levelDB,Hbase上都有使用。

wtable的内部原理，采用多集群架构，有配置中心etcd,支持实时配置推送变更，高可用。
每个小集群上有代理服务，他知道每个rowkey的位置，
小集群上核心的就是数据部分，有主从，延迟非常低，如果对数据有特殊的要求，可以设置参数指定从主库读取，

