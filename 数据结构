红黑树、 B+树、 跳表skipList、

红黑树：类平衡二叉树，广泛应用于：1 C++ STL模版中，map和set都是用 红黑树实现的；2 epoll 内核实现，用来管理事件块；3 Java TreeMap



B+树：多叉树结构，用于文件系统和数据库索引结构，why?是一种多路查找树，分支多，层数少，因为磁盘IO耗时，大量数据存储磁盘，需要考虑减少磁盘IO


SkipList: 多层级的有序链表结构 ，用于redis的sortedSet ,


比较：
skipList 和 红黑树
  单纯比较性能，两者相差不大，
  skiplist方便范围查找且实现方便

skipList和B+树
  mysql索引为什么使用B+树而不使用跳表？
    B+树是多叉结构，一页16kb大小，能存放较多索引信息，扇出很高，3层就可以存储2kw的数据，跳表是链表结构，一个数据一个结点，如果想存2kw的数据，基本需要24层高，对于mysql而言，磁盘IO
    很关键，
  redis中sortedSet为什么使用跳表而不使用B+树？
    redis是纯内存操作，层高不再是跳表的差的表现，而且B+有一系列合并拆分操作，为了保证树的平衡需要各种操作，而跳表插入时，随机效果确定索引，少了旋转平衡的开销


