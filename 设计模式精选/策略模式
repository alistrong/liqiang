策略模式：定义一系列算法，将每个算法封装起来，并让他们可以替换，

动机：完成某项任务，往往由不同的方式实现，每种方式称为一个策略，我们可以根据环境或者条件的不同选择不同的策略完成某项任务，

JDK例子说明

Arrays.sort()
public static <T> void sort(T [] a ,Comparator<? super T> c){

}

public interface Comparator<T>{
    int compare(T o1,T o2);
}

//策略1 按照年龄排序
class SortByAge implements Comparator<Person>{
    public int compare(Person p1, Person p2){
        if(p1.getAge>p2.getAge){
            return 1;
        }else if(p1.getAge()<p2.getAge()){
            return -1;
        }
        return 0;
    }
}
//策略2 按照身高排序。。。。

Arrays.sort(Person []people,new SortByAge());
Arrays.sort(Person []people,new SortByHeight());
