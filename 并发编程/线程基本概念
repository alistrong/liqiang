进程是内存中运行的应用程序，每个进程有一个独立的内存空间，一个进程可以启动多个线程，线程是操作系统中调度的最小单位，有独立的程序计数器，堆栈信息。多个
线程共享同一个进程的内存。

当new一个线程时，此时还没有运行，因为还没有调用start方法启动线程，调用完start方法后，线程真正创建，启动后并不会马上运行，因为要听从CPU的调度，即目前
处于Runnable状态，一旦CPU通过时间片选中了线程，则进入Runnable状态，真正执行自己的逻辑

1 CPU时间片用完或者调用yeild方法，由运行状态===》就绪状态，重新等待资源分配
2 调用sleep方法(属于Thread类的方法，没有释放锁，需要捕获异常)，主动放弃系统资源，=====》阻塞状态
3 调用wait方法（属于Object的方法，只能在同步代码块或者同步方法里使用，如果线程拥有了对象锁，调用wait方法后，就会释放持有的同步资源，）
3 调用阻塞IO方法，该方法返回之前，处于阻塞
4 线程等待synchronized锁时进入阻塞状态



线程的通信与协作
sleep方法让当前线程睡眠一会，期间不会释放占有的锁，
yeild方法让出该线程的时间片，
join方法暂定当前线程，不会释放锁，等待被指向线程结束后再继续执行，
wait方法会释放CPU和锁，等待notify或者notifyAll
