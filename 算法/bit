 ^, &, |

利用 A ^ A = 0, 可以消掉一些数中的重复的数
利用 A ^ 1 = ~A, 可以得到A的位级的反转
A & (-A) 得到A的位级最低的一位
利用 A | 0 = A, A & 1 = A
A & (A-1) =  去除A的位级表示中最低的那一位


//统计二进制x中1的个数
public static int num1(int x){
    int count = 0;
    while(x>0){
        if(1== x&1){
            count++;
        }
        x = x>>1;
    }
    return count;
}

//找出数组中不重复的两个数

public static int[] get(int nums[]){
    int result[] =new int[2];
    int res = 0;
    for(int num:nums){
        res = res^num;
    }
    int flag = res&(-res);
    while(int num:nums){
        if((num&flag) == 0){
            result[0] = result[0]^num;
        }else{
            result[1] = result[1]^num;
        }
    }
    return result;
}

判断奇偶数 n%2==0    n&1 ==1

不使用辅助变量的前提下交换两个数：x = x ^ y; y = x ^ y ; x = x ^ y;

2的n次方：

n&n-1, 作用是可以消除数字n的二进制表示中最后一个1.

